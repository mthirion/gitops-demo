apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"myapp:1.0","namespace":"atest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"myapp\")].image","pause":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  labels:
    app: myapp
    app.kubernetes.io/component: myapp
    app.kubernetes.io/instance: myapp
    app.kubernetes.io/name: myapp
    app.kubernetes.io/part-of: myapp-app
    app.openshift.io/runtime: myapp
    app.openshift.io/runtime-namespace: atest
    app.openshift.io/runtime-version: "1.0"
  name: myapp
  namespace: atest
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: myapp
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      creationTimestamp: null
      labels:
        app: myapp
        deploymentconfig: myapp
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/atest/myapp@sha256:4d75803ea2987bafc8d2a75883add86bcabcbde488783a8c0f55b8f3c6745b64
        imagePullPolicy: IfNotPresent
        name: myapp
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        - containerPort: 8778
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
